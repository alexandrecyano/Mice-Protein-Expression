install.packages(c("caret", "randomForest", "RCurl"))
# Importing libraries
library(randomForest)
library(caret)
# Importing the Iris data set
rfdata <- read.csv("Data_Cortex_Nuclear.csv")
setwd("E:/Mice Protein Expression Project/shiny/004-iris-predictor")
# Importing the Iris data set
rfdata <- read.csv("Data_Cortex_Nuclear.csv")
# Importing libraries
library(randomForest)
library(caret)
# Importing the data set
rfdata <- read.csv("Data_Cortex_Nuclear.csv")
rfdata = data[,c('SOD1_N','APP_N','pPKCG_N','pERK_N','pCAMKII_N','CaNA_N','Tau_N','pP70S6_N','pNUMB_N', 'BRAF_N', 'Ubiquitin_N', 'AKT_N','S6_N',
'AcetylH3K9_N','class')]
# Performs stratified random split of the data set
TrainingIndex <- createDataPartition(rfdata$Sclass, p=0.5, list = FALSE)
# Importing libraries
library(randomForest)
library(caret)
# Importing the data set
rfdata <- read.csv("Data_Cortex_Nuclear.csv")
rfdata = rfdata[,c('SOD1_N','APP_N','pPKCG_N','pERK_N','pCAMKII_N','CaNA_N','Tau_N','pP70S6_N','pNUMB_N', 'BRAF_N', 'Ubiquitin_N', 'AKT_N','S6_N',
'AcetylH3K9_N','class')]
# Performs stratified random split of the data set
TrainingIndex <- createDataPartition(rfdata$Sclass, p=0.5, list = FALSE)
# Performs stratified random split of the data set
TrainingIndex <- createDataPartition(rfdata$class, p=0.5, list = FALSE)
TrainingSet <- rfdata[TrainingIndex,] # Training Set
TestingSet <- rfdata[-TrainingIndex,] # Test Set
write.csv(TrainingSet, "training.csv")
write.csv(TestingSet, "testing.csv")
TrainSet <- read.csv("training.csv", header = TRUE)
TrainSet <- TrainSet[,-1]
model <- randomForest(Species ~ ., data = TrainSet, ntree = 127, mtry = 4, importance = TRUE)
model <- randomForest(class ~ ., data = TrainSet, ntree = 127, mtry = 4, importance = TRUE)
# Importing libraries
library(randomForest)
library(caret)
# Importing the data set
rfdata <- read.csv("Data_Cortex_Nuclear.csv")
rfdata = rfdata[,c('SOD1_N','APP_N','pPKCG_N','pERK_N','pCAMKII_N','CaNA_N','Tau_N','pP70S6_N','pNUMB_N', 'BRAF_N', 'Ubiquitin_N', 'AKT_N','S6_N',
'AcetylH3K9_N','class')]
# Performs stratified random split of the data set
TrainingIndex <- createDataPartition(rfdata$class, p=0.5, list = FALSE)
TrainingSet <- rfdata[TrainingIndex,] # Training Set
TestingSet <- rfdata[-TrainingIndex,] # Test Set
data.imputed.train <- rfImpute(class ~.,data = TrainingSet);
data.imputed.test <- rfImpute(class ~ .,data = TestingSet);
write.csv(data.imputed.train, "training.csv")
write.csv(data.imputed.test, "testing.csv")
TrainSet <- read.csv("training.csv", header = TRUE)
TrainSet <- TrainSet[,-1]
model <- randomForest(class ~ ., data = TrainSet, ntree = 127, importance = TRUE)
# Save model to RDS file
saveRDS(model, "model.rds")
install.packages("shiny")
df <- data.frame(
Name = c('SOD1_N','APP_N','pPKCG_N','pERK_N','pCAMKII_N','CaNA_N','Tau_N','pP70S6_N','pNUMB_N', 'BRAF_N', 'Ubiquitin_N', 'AKT_N','S6_N',
'AcetylH3K9_N','class'),
Value = as.character(c(input$SOD1_N,
input$APP_N,
input$pPKCG_N,
input$pERK_N,
input$pERK_N
input$pERK_N
input$pERK_N
input$pERK_N
input$pERK_N
input$pERK_N
input$pERK_N
input$pERK_N
input$pERK_N
)),
stringsAsFactors = FALSE)
df <- data.frame(
Name = c('SOD1_N','APP_N','pPKCG_N','pERK_N','pCAMKII_N','CaNA_N','Tau_N','pP70S6_N','pNUMB_N', 'BRAF_N', 'Ubiquitin_N', 'AKT_N','S6_N',
'AcetylH3K9_N','class'),
Value = as.character(c(input$SOD1_N,
input$APP_N,
input$pPKCG_N,
input$pERK_N,
input$pERK_N
input$pERK_N
input$pERK_N
input$pERK_N
input$pERK_N
input$pERK_N
input$pERK_N
input$pERK_N
input$pERK_N
input$pERK_N
input$pERK_N
)),
stringsAsFactors = FALSE)
library(shiny); runApp('app-slider.R')
